<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>${projectName} GWT PWA project</name>
  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <properties>
    <gwtVersion>2.8.0</gwtVersion>
    <appModuleBase>${package}.${projectName}</appModuleBase>
    <appModule>${appModuleBase}</appModule>
    <appName>${projectName}</appName>
    <gwtStyle>OBF</gwtStyle>
    <gwtPolymerVersion>1.7.0.1-SNAPSHOT</gwtPolymerVersion>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>
  </properties>

  <repositories>
    <repository>
      <id>sonatype-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
    <repository>
      <id>vaadin-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>google-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/google-snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.gwt</groupId>
        <artifactId>gwt</artifactId>
        <version>${gwtVersion}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-codeserver</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin.polymer</groupId>
      <artifactId>vaadin-gwt-polymer-elements</artifactId>
      <version>${gwtPolymerVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.googlecode.gwtquery</groupId>
      <artifactId>gwtquery</artifactId>
      <version>1.4.4-SNAPSHOT</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>com.google.gwt</groupId>
          <artifactId>gwt-elemental</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>net.ltgt.gwt.maven</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>1.0-rc-6</version>
        <executions>
          <execution>
            <goals>
              <goal>import-sources</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <moduleName>${appModule}</moduleName>
          <moduleShortName>${appName}</moduleShortName>
          <failOnError>true</failOnError>
          <compilerArgs>
            <arg>-compileReport</arg>
            <arg>-XcompilerMetrics</arg>
            <arg>-optimize</arg>
            <arg>9</arg>
            <arg>-style</arg>
            <arg>${gwtStyle}</arg>
          </compilerArgs>
          <devmodeArgs>
            <arg>-bindAddress</arg>
            <arg>0.0.0.0</arg>
          </devmodeArgs>
          <codeserverArgs>
            <arg>-bindAddress</arg>
            <arg>0.0.0.0</arg>
            <arg>-gen</arg>
            <arg>${project.build.directory}/.generated</arg>
          </codeserverArgs>
          <warDir>${project.build.directory}/${project.build.finalName}</warDir>
          <classpathScope>compile+runtime</classpathScope>
          <startupUrls>
            <startupUrl>index.html</startupUrl>
          </startupUrls>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/webapp</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>install node and npm</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v6.2.0</nodeVersion>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <!-- Enable this if you use 3rd party polymer elements -->
          <!--
          <execution>
            <id>bower install</id>
            <goals>
              <goal>bower</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          -->
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>empty-service-worker</id>
            <phase>generate-sources</phase>
            <configuration>
              <target>
                <touch file="${project.build.directory}/${project.build.finalName}/service-worker.js" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>gwt-api-generator</id>
            <phase>generate-resources</phase>
            <configuration>
              <target>
                <touch file="${project.build.directory}/${project.build.finalName}/service-worker.js" />
                <delete dir="bower_components/polymer" />
                <delete dir="bower_components/webcomponentsjs" />
                <exec dir="${project.basedir}" executable="${basedir}/node/node">
                  <arg value="${basedir}/node_modules/.bin/gwt-api-generator" />
                  <arg value="--excludeLib" />
                </exec>
              </target>
            </configuration>
            <goals>
              <!-- Enable this if you use 3rd party polymer elements -->
              <!-- <goal>run</goal> -->
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>pwa</id>
      <properties>
        <appModule>${appModuleBase}PWA</appModule>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>pwa-service-worker</id>
                <phase>prepare-package</phase>
                <configuration>
                  <target>
                    <exec dir="${project.build.directory}/${project.build.finalName}" executable="${basedir}/node/node">
                      <arg value="${basedir}/node_modules/.bin/sw-precache" />
                      <arg value="--config" />
                      <arg value="${basedir}/sw-precache-config.js" />
                    </exec>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>pretty</id>
      <properties>
        <gwtStyle>PRETTY</gwtStyle>
      </properties>
    </profile>
  </profiles>
</project>
